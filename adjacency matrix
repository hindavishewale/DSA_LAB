#include<iostream>
using namespace std;
class Graph
{
public:
    int vertex,edge;
   // int i=100,j=100;
    int i,j;
    int matrix[100][100];
    Graph(int vertex,int edge)
    {
     this->vertex=vertex;
     this->edge=edge;
     for(i=0;i<vertex;i++)
     {
     for(j=0;j<vertex;j++)
     {
     matrix[i][j]=0;
     }
     }
    }
    
    void display()
    {
    for(i=0;i<vertex;i++)
    {
    for(j=0;j<vertex;j++)
    {
    {
    cout<<matrix[i][j]<<"";
    }
    }
        cout<<endl;
    }
    }
    
    void edgefunction(int x,int y)
    {
    matrix[x][y]=1;
    matrix[y][x]=1;
    }
    
};


int main()
{
int v,e,var1,var2,ch;
cout<<"enter number of vertex:";
cin>>v;

cout<<"enter number of edges:";
cin>>e;

Graph g(v,e);
do
{
cout<<"enter edge starting point and end point:(starting point , end point)\n";
cin>>var1>>var2;
g.edgefunction(var1,var2);
cout<<"1 to continue (0 to exit):";
cin>>ch;
}while(ch!=0);



cout<<"Matrix:\n";
g.display();



return 0;
}
