#include <iostream>
#include<vector>
using namespace std;
class node
{
    public:
      node* next;
      int data,wt;
      node(int x,int w)
      {
          data=x;
          wt=w;
          next=nullptr;
      }
};
class Graph
{
  public:
    int v;
    int e;
    int m[100][100];
    vector<int> final1;
    vector<int> start1;
    vector<int> edge;
    int mst=0,i,j;
    node* adjlist[100];
    string stringarray[100];
    Graph(int x,int y)
    {
        v=x;
        e=y;
        for(i=0;i<100;i++)
        {
            for(j=0;j<v;j++)
            {
                m[i][j]=0;
                
            }
        }
        
        for(i=0;i<v;i++)
        {
            adjlist[i]=nullptr;
        }
    }
    
    int stringindex(string s)
    {
        for(i=0;i<v;i++)
        {
            if(stringarray[i]==s)
            {
                return i;
            }
        }
        return -1;
    }
    void addedge(string str1,string str2,int w)
    {
        int x=stringindex(str1);
        int y=stringindex(str2);
        m[x][y]=w;
        m[y][x]=w;
        
       node* newnode1=new node(y,w);
       node* newnode2=new node(x,w);
       if(adjlist[x]==nullptr)
       {
           adjlist[x]=newnode1;
       }
       else
       {
           node* temp=adjlist[x];
           while(temp->next!=nullptr)
           {
               temp=temp->next;
           }
           temp->next=newnode1;
       }
       
       if(adjlist[y]==nullptr)
       {
           adjlist[y]=newnode2;
       }
       else
       {
           node* temp=adjlist[y];
           while(temp->next!=nullptr)
           {
               temp=temp->next;
           }
           temp->next=newnode2;
       }
       
        
    }
    void displaymatrix()
    {
        for(i=0;i<v;i++)
        {
            for(j=0;j<v;j++)
            {
                cout<<m[i][j]<<" ";
            }
          cout<<endl;
        }
    }
    
    void addcity()
    {
        for(i=0;i<v;i++)
        {
         cin>>stringarray[i];   
        }
    }
    
   void displaylist()
   {
       for(i=0;i<v;i++)
       {
           cout<<stringarray[i];
           node* temp=adjlist[i];
           while(temp!=nullptr)
           {  

               cout<<"->"<<stringarray[temp->data]<<":"<<temp->wt;
               temp=temp->next;

           }
          cout<<endl;
       }
   }
    
};
int main() 
{
    int n,e,w,i;
    string s1,s2;
     cout<<"enter number of city";
     cin>>n;
     cout<<"enter number of paths";
     cin>>e;
     cout<<"enter"<<n<<"city"<<endl;
     Graph g(n,e);
     g.addcity();
     cout<<"enter"<<e<<"paths:"<<endl;
     for(i=0;i<e;i++)
     {
         cin>>s1>>s2>>w;
         g.addedge(s1,s2,w);
     }
     g.displaymatrix();
     g.displaylist();

    return 0;
} adjlist and matrix
