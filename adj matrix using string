#include <iostream>
using namespace std;
class Graph
{
  public:
    int vertex,edge;
    int m[100][100];
    string city[100];
    Graph(int x,int y)
    {
        vertex=x;
        edge=y;
     for(int i=0;i<100;i++)
     {
         for(int j=0;j<100;j++)
         {
             m[i][j]=0;
         }
     }
    }
    
    void addcity()
    {
        cout << "Enter the names of " << vertex << " cities:\n";
        for(int i=0;i<vertex;i++)
        {
            cin>>city[i];
        }
    }
    
    int cityindex(string city_name)
    {
        for(int i=0;i<vertex;i++)
        {
            if(city[i]==city_name)
            {
                return i;
            }
        }
        return -1;
    }
    
    void addedge(string src,string dst,int w)
    {
        int v=cityindex(src);
        int e=cityindex(dst);
        m[v][e]=w;
        m[e][v]=w;
    }
    void display()
    {
        for(int i=0;i<vertex;i++)
        {
            for(int j=0;j<vertex;j++)
            {
                cout<<m[i][j]<<" ";
            }
            cout<<endl;
        }
    }
};
int main() 
{
    
    int v,e;
    cout<<"enter number of city";
    cin>>v;
    cout<<"enter number of paths";
    cin>>e;
    
    Graph g(v,e);
    g.addcity();
   cout << "Enter paths (City1 City2 Distance):\n";
   for(int i=0;i<e;i++)
   {
       string src,dst;
       int w;
       cin>>src>>dst>>w;
       g.addedge(src,dst,w);
   }
    
   g.display();

    return 0;
}
